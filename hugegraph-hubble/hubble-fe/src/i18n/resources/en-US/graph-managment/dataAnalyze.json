{
  "data-analyze": {
    "category": {
      "gremlin-analyze": "Gremlin Analysis",
      "algorithm-analyze": "Algorithm Analysis"
    },
    "manipulations": {
      "execution": "Execute",
      "favorite": "Favorite",
      "reset": "Reset"
    },
    "algorithm-list": {
      "title": "Algorithm List",
      "loop-detection": "Loop Detection",
      "focus-detection": "Intersection Detection",
      "shortest-path": "Shortest Path",
      "shortest-path-all": "All Shortest Paths",
      "all-path": "All Paths",
      "neighbor-rank-recommendation": "Neighbor Rank Recommendation Algorithm",
      "model-similarity": "Model Similarity Algorithm",
      "real-time-recommendation": "Real-Time Recommendation",
      "k-step-neighbor": "k-Step Neighbor",
      "k-hop": "k-Hop Algorithm",
      "custom-path": "Custom Path",
      "custom-intersection-detection": "Custom Intersection Detection",
      "radiographic-inspection": "Radiographic Inspection",
      "common-neighbor": "Common Neighbor",
      "weighted-shortest-path": "Weighted Shortest Path",
      "single-source-weighted-path": "Single Source Weighted Path",
      "jaccard-similarity": "Jaccard Similarity",
      "personal-rank-recommendation": "Personal Rank Recommendation Algorithm"
    },
    "algorithm-forms": {
      "loop-detection": {
        "options": {
          "source": "Source ID:",
          "direction": "Direction:",
          "max_depth": "Max Depth:",
          "label": "Edge Type:",
          "max_degree": "Max Degree:",
          "source_in_ring": "Include Source in Loop:",
          "limit": "Max Reachable Paths:",
          "capacity": "Max Accessed Vertices:"
        },
        "pre-value": "All",
        "placeholder": {
          "input-source-id": "Please enter the Source ID",
          "input-integer": "Please enter an integer greater than or equal to 0",
          "input-positive-integer": "Please enter an integer greater than 0",
          "no-edge-types": "No Edge Types"
        },
        "hint": {
          "max-depth": "To ensure performance, it is recommended not to exceed 10 steps, preferably 5 steps",
          "skip-degree": "Fill in the minimum number of edges to skip during the query process, that is, skip the vertex when the number of edges is greater than the super vertex degree. It can be used to avoid super nodes"
        },
        "validations": {
          "no-empty": "This field cannot be empty",
          "integer-only": "Please enter an integer greater than or equal to 0",
          "postive-integer-only": "Please enter an integer greater than 0"
        }
      },
      "focus-detection": {
        "options": {
          "source": "Source ID:",
          "target": "Target ID:",
          "direction": "Direction:",
          "max_depth": "Max Depth:",
          "label": "Edge Type:",
          "max_degree": "Max Degree:",
          "limit": "Max Accessed Vertices:",
          "capacity": "Max Intersections:"
        },
        "pre-value": "All",
        "placeholder": {
          "input-source-id": "Please enter the Source ID",
          "input-target-id": "Please enter the Target ID",
          "input-integer": "Please enter an integer greater than or equal to 0",
          "input-positive-integer": "Please enter an integer greater than 0",
          "no-edge-types": "No Edge Types"
        },
        "hint": {
          "max-depth": "To ensure performance, it is recommended not to exceed 10 steps, preferably 5 steps",
          "skip-degree": "Fill in the minimum number of edges to skip during the query process, that is, skip the vertex when the number of edges is greater than the super vertex degree. It can be used to avoid super nodes"
        },
        "validations": {
          "no-empty": "This field cannot be empty",
          "integer-only": "Please enter an integer greater than or equal to 0",
          "postive-integer-only": "Please enter an integer greater than 0"
        }
      },
      "shortest-path": {
        "options": {
          "source": "Source ID:",
          "target": "Target ID:",
          "direction": "Direction:",
          "max_depth": "Max Depth:",
          "maxDepth": "Max Depth:",
          "label": "Edge Type:",
          "max_degree": "Max Degree:",
          "maxDegree": "Max Degree:",
          "skip_degree": "Super Vertex Degree:",
          "skipDegree": "Super Vertex Degree:",
          "capacity": "Max Accessed Vertices:"
        },
        "pre-value": "All",
        "placeholder": {
          "input-source-id": "Please enter the Source ID",
          "input-target-id": "Please enter the Target ID",
          "input-integer": "Please enter an integer greater than or equal to 0",
          "input-positive-integer": "Please enter an integer greater than 0",
          "no-edge-types": "No Edge Types"
        },
        "hint": {
          "max-depth": "To ensure performance, it is recommended not to exceed 10 steps, preferably 5 steps",
          "skip-degree": "Fill in the minimum number of edges to skip during the query process, that is, skip the vertex when the number of edges is greater than the super vertex degree. It can be used to avoid super nodes"
        },
        "validations": {
          "no-empty": "This field cannot be empty",
          "integer-only": "Please enter an integer greater than or equal to 0",
          "postive-integer-only": "Please enter an integer greater than 0"
        }
      },
      "shortest-path-all": {
        "options": {
          "source": "Source ID:",
          "target": "Target ID:",
          "direction": "Direction:",
          "max_depth": "Max Depth:",
          "label": "Edge Type:",
          "max_degree": "Max Degree:",
          "capacity": "Max Accessed Vertices:",
          "skip_degree": "Super Vertex Degree:"
        },
        "pre-value": "All",
        "placeholder": {
          "input-source-id": "Please enter the Source ID",
          "input-target-id": "Please enter the Target ID",
          "input-integer": "Please enter an integer greater than or equal to 0",
          "input-positive-integer": "Please enter an integer greater than 0",
          "no-edge-types": "No Edge Types"
        },
        "hint": {
          "max-depth": "To ensure performance, it is recommended not to exceed 10 steps, preferably 5 steps",
          "skip-degree": "Fill in the minimum number of edges to skip during the query process, that is, skip the vertex when the number of edges is greater than the super vertex degree. It can be used to avoid super nodes"
        },
        "validations": {
          "no-empty": "This field cannot be empty",
          "integer-only": "Please enter an integer greater than or equal to 0",
          "postive-integer-only": "Please enter an integer greater than 0"
        }
      },
      "all-path": {
        "options": {
          "source": "Source ID:",
          "target": "Target ID:",
          "direction": "Direction:",
          "max_depth": "Max Depth:",
          "label": "Edge Type:",
          "max_degree": "Max Degree:",
          "capacity": "Max Accessed Vertices:",
          "limit": "Max Returned Paths:"
        },
        "pre-value": "All",
        "placeholder": {
          "input-source-id": "Please enter the Source ID",
          "input-target-id": "Please enter the Target ID",
          "input-integer": "Please enter an integer greater than or equal to 0",
          "input-positive-integer": "Please enter an integer greater than 0",
          "no-edge-types": "No Edge Types"
        },
        "hint": {
          "max-depth": "To ensure performance, it is recommended not to exceed 10 steps, preferably 5 steps",
          "skip-degree": "Fill in the minimum number of edges to skip during the query process, that is, skip the vertex when the number of edges is greater than the super vertex degree. It can be used to avoid super nodes"
        },
        "validations": {
          "no-empty": "This field cannot be empty",
          "integer-only": "Please enter an integer greater than or equal to 0",
          "postive-integer-only": "Please enter an integer greater than 0"
        }
      },
      "model-similarity": {
        "options": {
          "method": "Starting Point Selection Method:",
          "source": "Starting Point ID:",
          "vertex-type": "Vertex Type",
          "vertex-property": "Vertex Property",
          "direction": "Direction:",
          "least_neighbor": "Minimum Number of Neighbors:",
          "similarity": "Similarity:",
          "label": "Edge Type:",
          "max_similar": "Maximum Number of Highest Similarity:",
          "least_similar": "Minimum Number of Similar Points:",
          "property_filter": "Property Filter:",
          "least_property_number": "Minimum Number of Property Values:",
          "max_degree": "Maximum Degree:",
          "capacity": "Maximum Number of Accessed Vertices:",
          "skip_degree": "Maximum Number of Returned Vertices:",
          "limit": "Maximum Number of Returned Results:",
          "return_common_connection": "Return Common Connection Points:",
          "return_complete_info": "Return Complete Vertex Information:"
        },
        "radio-value": {
          "specific-id": "Specific ID",
          "filtered-type-property": "Filtered Type Property"
        },
        "placeholder": {
          "input-source-id": "Please enter the starting point ID",
          "input-vertex-type": "Please select a vertex type",
          "input-vertex-property": "Please select a vertex property",
          "input-integer": "Please enter an integer greater than or equal to 0",
          "input-positive-integer": "Please enter an integer greater than 0",
          "input-integer-gt-1": "Please enter an integer greater than 1",
          "input-filtered-property": "Please select the property to filter",
          "no-properties": "No properties",
          "no-vertex-type": "No vertex type"
        },
        "hint": {
          "least_property_number": "Property filter and minimum number of property values must be used together. The effect is: when the value of a certain property of the starting point and all its similar points is greater than or equal to the minimum number of property values, the starting point and its similar points will be returned",
          "least_neighbor": "If the number of neighbors is less than the current set value, the starting point is considered to have no similar points",
          "similarity": "The proportion of the number of common neighbors between the starting point and its similar points to the total number of neighbors of the starting point",
          "max_similar": "Returns the top number of similar points with the highest similarity to the starting point, 0 means all",
          "return_common_connection": "Whether to return the intermediate points that are commonly connected to the starting point and its similar points"
        },
        "validations": {
          "no-empty": "This item cannot be empty",
          "no-edge-typs": "No edge type",
          "integer-only": "Please enter an integer greater than or equal to 0",
          "positive-integer-only": "Please enter an integer greater than 0",
          "integer-gt-1": "Please enter an integer greater than 1"
        },
        "pre-value": "All"
      },
      "neighbor-rank": {
        "options": {
          "source": "Starting Point ID:",
          "alpha": "Alpha",
          "direction": "Direction:",
          "capacity": "Maximum Number of Accessed Vertices:",
          "label": "Edge Type:",
          "degree": "Maximum Degree:",
          "top": "Top N Weights per Layer:"
        },
        "placeholder": {
          "input-source-id": "Please enter the starting point ID",
          "input-integer": "Please enter an integer greater than or equal to 0",
          "input-positive-integer": "Please enter an integer greater than 0",
          "range": "Range (0-1]"
        },
        "hint": {
          "top": "In the results, only the top N results with the highest weights are retained in each layer"
        },
        "validations": {
          "no-empty": "This item cannot be empty",
          "no-edge-typs": "No edge type",
          "range": "Please enter a value greater than 0 and less than or equal to 1",
          "integer-only": "Please enter an integer greater than or equal to 0",
          "postive-integer-only": "Please enter an integer greater than 0",
          "input-chars": "Rules cannot repeat"
        },
        "pre-value": "All",
        "add-new-rule": "Add Rule"
      }
    },
    "exec-logs": {
      "table-title": {
        "time": "Time",
        "type": "Execution Type",
        "content": "Execution Content",
        "status": "Status",
        "duration": "Duration",
        "manipulation": "Operation"
      },
      "type": {
        "GREMLIN": "GREMLIN Query",
        "GREMLIN_ASYNC": "GREMLIN Task",
        "ALGORITHM": "Algorithm Query"
      },
      "status": {
        "success": "Success",
        "async-success": "Submission Success",
        "running": "Running",
        "failed": "Failed",
        "async-failed": "Submission Failed"
      }
    }
  }
}
